syntax = "proto3";

// The greeting service definition.
service MyService {
    // Sends a greeting
    rpc SayHello (HelloRequest) returns (HelloReply) {
    }
}

message RpcExhibitText {
    int64 id = 1;
    string text = 2;
}

// The request message containing the question, the texts and the status.
// status = 2 requires pyecharts
message HelloRequest {
    string question = 1;
    repeated RpcExhibitText texts = 2;
    int32 status = 3;
}

// define type
message AnswerWithTextId {
    string answer = 1;
    int64 textId = 2;
}

// The response message containing the best answer extracted from the texts with the text
message HelloReply {
    AnswerWithTextId answerWithTextId = 1;
}

message QuestionWithExhibitId {
    string exhibitLabel = 1;
    string question = 2;
    int64 freq = 3;
}

// The request message will be used in analysis of questions
message QuestionAnalysisRequest {
    repeated QuestionWithExhibitId questionWithExhibitId = 1;
}

// The response message will send each question or id with its frequency
message QuestionAnalysisReply {
    repeated string questions = 1;
    repeated int64 questionFreq = 2;
    repeated string exhibitLabels = 3;
    repeated int64 labelFreq = 4;
}

message UserQuestion {
    string exhibitLabel = 1;
    string question = 2;
}

message UserAnalysisRequest {
    repeated UserQuestion userQuestion = 1;
}

message UserAnalysisReply {
    repeated string exhibitLabels = 1;
}