syntax = "proto3";

import "google/protobuf/empty.proto";

// The greeting service definition.
service MyService {
    // Sends a greeting
    rpc GetAnswer (QARequest) returns (QAReply) {}

    rpc GetOpenDocument(OpenDocumentRequest) returns (google.protobuf.Empty) {}

    rpc GetExhibitAlias(ExhibitLabelAliasRequest) returns (ExhibitLabelAliasReply) {}
}

message RpcExhibitText {
    int64 id = 1;
    string text = 2;
}

// The request message containing the question, the texts and the status.
// status = 2 requires pyecharts
message QARequest {
    string question = 1;
    repeated RpcExhibitText texts = 2;
    int32 status = 3;
}

message OpenDocumentRequest {
    string label = 1;
    repeated RpcExhibitText texts = 2;
}

message OpenDocumentResponse{
    string label = 1;
}

message ExhibitLabelAliasRequest {
    repeated string texts = 1;
}

// define type
message AnswerWithTextId {
    string answer = 1;
    int64 text_id = 2;
}

// The response message containing the best answer extracted from the texts with the text
message QAReply {
    AnswerWithTextId answer_with_text_id = 1;
}

message ExhibitLabelAliasReply {
    repeated string aliases = 1;
}
